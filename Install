#!/bin/bash
set -euo pipefail

log() { echo -e "\n==> $1"; }
error_exit() { echo "❌ $1"; exit 1; }
install() { pacman -S --noconfirm "$@"; }

clear
echo "=== Welcome to Sona Linux Installer ==="
uname -a
lsblk -o NAME,SIZE,TYPE,MOUNTPOINT
echo

# Check network
if ! ping -c 1 archlinux.org &>/dev/null; then
  error_exit "No internet detected. Connect using 'iwctl' or 'nmtui'."
fi

# Optional: optimize mirrors
read -rp "Optimize pacman mirrors? (y/N): " OPTIMIZE
OPTIMIZE=${OPTIMIZE,,}
if [[ "$OPTIMIZE" == "y" ]]; then
  install reflector
  reflector --latest 10 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
  log "Mirrorlist optimized."
fi

# User info
read -rp "Full name: " FULLNAME
read -rp "Username (lowercase): " USERNAME
USERNAME=${USERNAME,,}
read -rp "Hostname: " HOSTNAME

while true; do
  read -rsp "Password: " PASSWORD; echo
  read -rsp "Confirm password: " CONFIRM; echo
  [[ "$PASSWORD" == "$CONFIRM" ]] && break
  echo "❌ Passwords do not match. Try again."
done
read -rp "Language locale (default: en_US.UTF-8): " LANG_LOCALE
LANG_LOCALE=${LANG_LOCALE:-en_US.UTF-8}
read -rp "Console keymap (default: us): " CONSOLE_KEYMAP
CONSOLE_KEYMAP=${CONSOLE_KEYMAP:-us}
read -rp "X11 keyboard layout (default: us): " X11_KEYBOARD
X11_KEYBOARD=${X11_KEYBOARD:-us}

# Time zone
echo "Select a time zone:"
select T in UTC America/New_York America/Chicago America/Denver America/Los_Angeles Europe/London Manual; do
  [[ "$T" == "Manual" ]] && read -rp "Enter full time zone (e.g. Europe/Berlin): " TIMEZONE && break
  TIMEZONE=$T && break
done

# Disk selection
lsblk -d -e 7,11 -o NAME,SIZE,MODEL | nl
DISKS=($(lsblk -d -e 7,11 -o NAME))
while true; do
  read -rp "Disk number to install to: " DISK_NUM
  if [[ "$DISK_NUM" =~ ^[0-9]+$ ]] && [ "$DISK_NUM" -ge 1 ] && [ "$DISK_NUM" -le "${#DISKS[@]}" ]; then
    DISK_NAME="${DISKS[$((DISK_NUM-1))]}"
    DISK="/dev/$DISK_NAME"
    log "Selected disk: $DISK"
    break
  else
    echo "Invalid input. Try again."
  fi
done read -rp "Dual boot with another OS? (y/N): " DUALBOOT
DUALBOOT=${DUALBOOT,,}

if [[ "$DUALBOOT" == "y" ]]; then
  lsblk -f
  read -rp "EFI partition (e.g., /dev/sda1): " EFI_PART
  read -rp "Root partition (e.g., /dev/sda5): " ROOT_PART
  read -rp "Proceed and format root only? (y/N): " CONFIRM
  [[ "$CONFIRM" =~ ^[Yy]$ ]] || exit 1
  mkfs.ext4 "$ROOT_PART"
  mount "$ROOT_PART" /mnt
  mkdir -p /mnt/boot
  mount "$EFI_PART" /mnt/boot
else
  echo "⚠️  ALL data on $DISK will be erased!"
  read -rp "Type YES to continue: " CONFIRM
  [[ "$CONFIRM" == "YES" ]] || exit 1

  parted --script "$DISK" \
    mklabel gpt \
    mkpart primary fat32 1MiB 513MiB \
    set 1 esp on \
    mkpart primary ext4 513MiB 100%

  if [[ "$DISK_NAME" =~ nvme ]]; then
    EFI_PART="${DISK}p1"
    ROOT_PART="${DISK}p2"
  else
    EFI_PART="${DISK}1"
    ROOT_PART="${DISK}2"
  fi

  mkfs.fat -F32 "$EFI_PART"
  mkfs.ext4 -F "$ROOT_PART"
  mount "$ROOT_PART" /mnt
  mkdir -p /mnt/boot
  mount "$EFI_PART" /mnt/boot
fi # Desktop choice
echo "Choose a desktop environment:"
select DE in mate xfce gnome; do break; done

# Optional features
read -rp "Enable autologin? (y/N): " AUTOLOGIN
read -rp "Enable Bluetooth? (y/N): " ENABLE_BT
read -rp "Enable Flatpak? (y/N): " ENABLE_FLATPAK
read -rp "Install Developer Tools? (y/N): " INSTALL_DEV
read -rp "Install Accessibility Extras? (y/N): " INSTALL_ACC
read -rp "Install Waydroid / Android support? (y/N): " INSTALL_ANDROID

# Base install
log "Installing base system..."
pacstrap /mnt base linux linux-firmware sudo networkmanager grub efibootmgr os-prober espeakup xdg-user-dirs xdg-utils

genfstab -U /mnt >> /mnt/etc/fstab

# Chroot config
log "Entering chroot..."
arch-chroot /mnt /bin/bash <<EOF
set -euo pipefail

ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime
hwclock --systohc
echo "$LANG_LOCALE UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=$LANG_LOCALE" > /etc/locale.conf
echo "$HOSTNAME" > /etc/hostname
echo "KEYMAP=$CONSOLE_KEYMAP" > /etc/vconsole.conf

mkdir -p /etc/X11/xorg.conf.d
cat > /etc/X11/xorg.conf.d/00-keyboard.conf <<XKB
Section "InputClass"
    Identifier "system-keyboard"
    MatchIsKeyboard "on"
    Option "XkbLayout" "$X11_KEYBOARD"
EndSection
XKB

echo "root:$PASSWORD" | chpasswd
useradd -m -c "$FULLNAME" -G wheel,audio,video,storage $USERNAME
echo "$USERNAME:$PASSWORD" | chpasswd

echo "%wheel ALL=(ALL:ALL) ALL" > /etc/sudoers.d/10-sona
chmod 0440 /etc/sudoers.d/10-sona

systemctl enable NetworkManager
systemctl enable speech-dispatcher
systemctl enable espeakup
echo speakup_soft >> /etc/modules-load.d/speakup.conf
systemctl enable systemd-timesyncd

pacman -Syu --noconfirm --needed xorg xorg-xinit orca espeak-ng brltty gnome-terminal pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber alsa-utils

if [[ "$DE" == "mate" ]]; then
  pacman -S --noconfirm --needed mate mate-extra lightdm lightdm-gtk-greeter network-manager-applet
  systemctl enable lightdm
  if [[ "$AUTOLOGIN" == "y" ]]; then
    mkdir -p /etc/lightdm/lightdm.conf.d
    echo -e "[Seat:*]\nautologin-user=$USERNAME\nautologin-session=mate" > /etc/lightdm/lightdm.conf.d/50-autologin.conf
  fi
elif [[ "$DE" == "xfce" ]]; then
  pacman -S --noconfirm --needed xfce4 xfce4-goodies lightdm lightdm-gtk-greeter network-manager-applet
  systemctl enable lightdm
  if [[ "$AUTOLOGIN" == "y" ]]; then
    mkdir -p /etc/lightdm/lightdm.conf.d
    echo -e "[Seat:*]\nautologin-user=$USERNAME\nautologin-session=xfce" > /etc/lightdm/lightdm.conf.d/50-autologin.conf
  fi
elif [[ "$DE" == "gnome" ]]; then
  pacman -S --noconfirm --needed gnome gdm
  echo -e "[daemon]\nAutomaticLoginEnable=true\nAutomaticLogin=$USERNAME\nWaylandEnable=false" > /etc/gdm/custom.conf
  systemctl enable gdm
fi

mkdir -p /home/$USERNAME/.config/autostart
cat > /home/$USERNAME/.config/autostart/orca.desktop <<DESKTOP
[Desktop Entry]
Type=Application
Name=Orca
Exec=orca
X-GNOME-Autostart-enabled=true
OnlyShowIn=MATE;GNOME;XFCE;
DESKTOP
chown -R $USERNAME:$USERNAME /home/$USERNAME

[[ "$ENABLE_BT" == "y" ]] && pacman -S --noconfirm bluez bluez-utils && systemctl enable bluetooth
[[ "$ENABLE_FLATPAK" == "y" ]] && pacman -S --noconfirm flatpak && flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
[[ "$INSTALL_DEV" == "y" ]] && pacman -S --noconfirm base-devel git python python-pip rust nodejs npm go jdk-openjdk
[[ "$INSTALL_ACC" == "y" ]] && pacman -S --noconfirm wine festival speech-tools speech-dispatcher espeak-ng
[[ "$INSTALL_ANDROID" == "y" ]] && pacman -S --noconfirm waydroid aosp-uiautomator && echo "Waydroid installed. Run 'sudo waydroid init' after reboot."

if ! grep -q "GRUB_DISABLE_OS_PROBER=false" /etc/default/grub; then
  echo "GRUB_DISABLE_OS_PROBER=false" >> /etc/default/grub
fi

if [[ -d /sys/firmware/efi ]]; then
  grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
else
  grub-install --target=i386-pc --recheck $DISK
fi
grub-mkconfig -o /boot/grub/grub.cfg
EOF

log "✅ Sona Linux installation complete!"
echo "Run: umount -R /mnt && reboot"