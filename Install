#!/bin/bash
set -euo pipefail

log() { echo -e "\n==> $1"; }
error_exit() { echo "❌ $1"; exit 1; }

# Show system info first
clear
echo "=== Welcome to Sona Linux Installer ==="
echo "System Information:"
if command -v neofetch &>/dev/null; then
  neofetch
else
  uname -a
  echo
  lsblk -o NAME,SIZE,TYPE,MOUNTPOINT
fi
echo

# Ensure network is up
if ! ping -c 1 archlinux.org &>/dev/null; then
  echo "No internet detected. Please connect using 'iwctl' or 'nmtui'."
  exit 1
fi

# Collect user input
read -rp "Full name: " FULLNAME
read -rp "Username (lowercase): " USERNAME
USERNAME=${USERNAME,,}
read -rp "Hostname: " HOSTNAME

while true; do
  read -rsp "Password: " PASSWORD; echo
  read -rsp "Confirm password: " CONFIRM; echo
  [[ "$PASSWORD" == "$CONFIRM" ]] && break
  echo "Passwords do not match. Try again."
done

# Time zone
echo "Choose a time zone:"
select T in UTC America/New_York America/Chicago America/Denver America/Los_Angeles Europe/London Manual; do
  [[ "$T" == "Manual" ]] && read -rp "Enter full time zone (e.g. Europe/Berlin): " TIMEZONE && break
  TIMEZONE=$T && break
done

# Disk selection
lsblk -d -e 7,11 -o NAME,SIZE,MODEL | nl
read -rp "Disk number to install to: " DISK_NUM
DISK_NAME=$(lsblk -d -e 7,11 -o NAME | sed -n "${DISK_NUM}p")
DISK="/dev/$DISK_NAME"

read -rp "Dual boot with another OS? (y/N): " DUALBOOT
DUALBOOT=${DUALBOOT,,}

if [[ "$DUALBOOT" == "y" ]]; then
  lsblk -f
  read -rp "EFI partition (e.g., /dev/sda1): " EFI_PART
  read -rp "Root partition (e.g., /dev/sda5): " ROOT_PART
  read -rp "Proceed and format ROOT only? (y/N): " confirm
  [[ "$confirm" =~ ^[Yy]$ ]] || exit 1
  mkfs.ext4 "$ROOT_PART"
  mount "$ROOT_PART" /mnt
  mkdir -p /mnt/boot
  mount "$EFI_PART" /mnt/boot
else
  echo "⚠️ ALL DATA ON $DISK WILL BE ERASED!"
  read -rp "Continue? (yes/N): " confirm
  [[ "$confirm" == "yes" ]] || exit 1
  parted --script "$DISK" \
    mklabel gpt \
    mkpart primary fat32 1MiB 513MiB \
    set 1 esp on \
    mkpart primary ext4 513MiB 100%
  mkfs.fat -F32 "${DISK}p1"
  mkfs.ext4 -F "${DISK}p2"
  mount "${DISK}p2" /mnt
  mkdir -p /mnt/boot
  mount "${DISK}p1" /mnt/boot
fi

# Desktop choice
echo "Choose a desktop environment:"
select DE in mate xfce gnome; do break; done

read -rp "Enable autologin? (y/N): " AUTOLOGIN
read -rp "Enable Bluetooth? (y/N): " ENABLE_BT
read -rp "Enable Flatpak? (y/N): " ENABLE_FLATPAK
read -rp "Install VirtualBox host tools? (y/N): " INSTALL_VBOX

# Essentials modules
read -rp "Install Developer Tools (Python, Rust, Node, Java, Go)? (y/N): " INSTALL_DEV
read -rp "Install Accessibility Extras (NVDA, festival, speech tools)? (y/N): " INSTALL_ACC
read -rp "Install Android/Waydroid + TalkBack? (y/N): " INSTALL_ANDROID
read -rp "Install Security Tools (Wireshark, metasploit, hashcat)? (y/N): " INSTALL_SEC
read -rp "Install Shells, Editors, and Power Tools? (y/N): " INSTALL_POWER

# Base install
log "Installing base system..."
pacstrap /mnt base linux linux-firmware sudo networkmanager grub efibootmgr os-prober xdg-user-dirs xdg-utils espeakup neofetch

genfstab -U /mnt >> /mnt/etc/fstab

# Configure system inside chroot
arch-chroot /mnt /bin/bash <<EOF
set -euo pipefail

ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime
hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
echo "$HOSTNAME" > /etc/hostname

echo "root:$PASSWORD" | chpasswd
useradd -m -c "$FULLNAME" -G wheel,audio,video,storage $USERNAME
echo "$USERNAME:$PASSWORD" | chpasswd
echo "%wheel ALL=(ALL) ALL" >> /etc/sudoers

systemctl enable NetworkManager
systemctl enable speech-dispatcher
systemctl enable espeakup
systemctl enable systemd-timesyncd

pacman -Syu --noconfirm xorg xorg-xinit orca espeak-ng brltty gnome-terminal pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber alsa-utils synaptic

if [[ "$DE" == "mate" ]]; then
  pacman -S --noconfirm mate mate-extra lightdm lightdm-gtk-greeter network-manager-applet
  systemctl enable lightdm
elif [[ "$DE" == "xfce" ]]; then
  pacman -S --noconfirm xfce4 xfce4-goodies lightdm lightdm-gtk-greeter network-manager-applet
  systemctl enable lightdm
elif [[ "$DE" == "gnome" ]]; then
  pacman -S --noconfirm gnome gdm
  echo -e "[daemon]\nAutomaticLoginEnable=true\nAutomaticLogin=$USERNAME\nWaylandEnable=false" > /etc/gdm/custom.conf
  systemctl enable gdm
fi

mkdir -p /home/$USERNAME/.config/autostart
cat > /home/$USERNAME/.config/autostart/orca.desktop <<DESKTOP
[Desktop Entry]
Type=Application
Name=Orca
Exec=orca
X-GNOME-Autostart-enabled=true
OnlyShowIn=MATE;GNOME;XFCE;
DESKTOP
chown -R $USERNAME:$USERNAME /home/$USERNAME

# Optional packages
[[ "$ENABLE_BT" == "y" ]] && pacman -S --noconfirm bluez bluez-utils && systemctl enable bluetooth
[[ "$ENABLE_FLATPAK" == "y" ]] && pacman -S --noconfirm flatpak && flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
[[ "$INSTALL_VBOX" == "y" ]] && pacman -S --noconfirm virtualbox virtualbox-host-modules-arch && usermod -aG vboxusers $USERNAME

[[ "$INSTALL_DEV" == "y" ]] && pacman -S --noconfirm base-devel git python python-pip rust nodejs npm go jdk-openjdk
[[ "$INSTALL_ACC" == "y" ]] && pacman -S --noconfirm wine festival speech-tools speech-dispatcher espeak-ng
[[ "$INSTALL_ANDROID" == "y" ]] && pacman -S --noconfirm waydroid aosp-uiautomator espeak-ng
[[ "$INSTALL_SEC" == "y" ]] && pacman -S --noconfirm wireshark-qt hashcat metasploit
[[ "$INSTALL_POWER" == "y" ]] && pacman -S --noconfirm fish zsh code emacs vim tmux bspwm

# GRUB config
if ! grep -q "GRUB_DISABLE_OS_PROBER=false" /etc/default/grub; then
  echo "GRUB_DISABLE_OS_PROBER=false" >> /etc/default/grub
fi

if [[ -d /sys/firmware/efi ]]; then
  grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
else
  grub-install --target=i386-pc --recheck $DISK
fi
grub-mkconfig -o /boot/grub/grub.cfg
EOF

log "Installation complete! Unmount with 'umount -R /mnt' and reboot."