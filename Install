#!/bin/bash
set -euo pipefail

log() { echo -e "\n==> $1"; }
error_exit() { echo "❌ ERROR: $1"; exit 1; }

# Welcome
log "Welcome to the Sona Linux Installer — Accessible, Debug-Safe, and Friendly."

# Internet check
log "Checking for internet..."
if ! ping -c 1 archlinux.org &>/dev/null; then
  echo "No internet. Please connect using iwctl before proceeding."
  exit 1
fi

# User Info
read -rp "Full name: " FULLNAME
read -rp "Username (lowercase): " USERNAME
USERNAME=${USERNAME,,}
read -rp "Hostname: " HOSTNAME

while true; do
  read -rsp "Password: " PASSWORD; echo
  read -rsp "Confirm password: " CONFIRM; echo
  [[ "$PASSWORD" == "$CONFIRM" ]] && break
  echo "❌ Passwords do not match. Try again."
done

# Time zone
echo "Choose your time zone:"
select T in UTC America/New_York America/Chicago America/Denver America/Los_Angeles Manual; do
  [[ "$T" == "Manual" ]] && read -rp "Enter time zone (e.g. Europe/London): " TIMEZONE && break
  TIMEZONE=$T && break
done

# Disk selection
lsblk -d -e 7,11 -o NAME,SIZE,MODEL | nl
read -rp "Select disk number to install to: " DISK_NUM
DISK_NAME=$(lsblk -d -e 7,11 -o NAME | sed -n "${DISK_NUM}p")
DISK="/dev/$DISK_NAME"

read -rp "Dual boot with Windows or another OS? (y/N): " DUALBOOT
DUALBOOT=${DUALBOOT,,}
if [[ "$DUALBOOT" == "y" ]]; then
  lsblk -f
  read -rp "EFI partition (e.g., /dev/sda1): " EFI_PART
  read -rp "Root partition (e.g., /dev/sda5): " ROOT_PART
  echo "EFI=$EFI_PART | ROOT=$ROOT_PART"
  read -rp "Proceed and format ROOT only? (y/N): " confirm
  [[ "$confirm" =~ ^[Yy]$ ]] || exit 1
  mkfs.ext4 "$ROOT_PART"
  mount "$ROOT_PART" /mnt
  mkdir -p /mnt/boot
  mount "$EFI_PART" /mnt/boot
else
  echo "⚠️ WARNING: ALL data on $DISK will be erased!"
  read -rp "Are you sure? (y/N): " confirm
  [[ "$confirm" =~ ^[Yy]$ ]] || exit 1
  parted --script "$DISK" \
    mklabel gpt \
    mkpart primary fat32 1MiB 513MiB \
    set 1 esp on \
    mkpart primary ext4 513MiB 100%
  mkfs.fat -F32 "${DISK}p1"
  mkfs.ext4 -F "${DISK}p2"
  mount "${DISK}p2" /mnt
  mkdir -p /mnt/boot
  mount "${DISK}p1" /mnt/boot
fi

# Desktop
echo "Choose a desktop:"
select D in mate xfce gnome; do DE=$D; break; done

read -rp "Enable autologin? (y/N): " AUTOLOGIN
read -rp "Enable Bluetooth? (y/N): " ENABLE_BT
read -rp "Install Flatpak? (y/N): " ENABLE_FLATPAK
read -rp "Install VirtualBox tools? (y/N): " INSTALL_VBOX

# Confirm
log "SUMMARY"
echo "User: $USERNAME"
echo "Host: $HOSTNAME"
echo "Disk: $DISK"
echo "Desktop: $DE"
echo "Timezone: $TIMEZONE"
[[ "$DUALBOOT" == "y" ]] && echo "Dual Boot: Yes (EFI=$EFI_PART, ROOT=$ROOT_PART)"
read -rp "Continue? (y/N): " confirm
[[ "$confirm" =~ ^[Yy]$ ]] || exit 1

# Install base system
log "Installing Arch base..."
pacstrap /mnt base linux linux-firmware sudo networkmanager grub efibootmgr os-prober xdg-user-dirs xdg-utils espeakup || error_exit "pacstrap failed"

genfstab -U /mnt >> /mnt/etc/fstab

# Chroot configuration
log "Entering chroot to configure system..."
arch-chroot /mnt /bin/bash <<EOF
set -euo pipefail

ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime
hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
echo "$HOSTNAME" > /etc/hostname

# User accounts
echo "root:$PASSWORD" | chpasswd
useradd -m -c "$FULLNAME" -G wheel,audio,video,storage $USERNAME
echo "$USERNAME:$PASSWORD" | chpasswd
echo "%wheel ALL=(ALL) ALL" >> /etc/sudoers

# Enable services
[[ -f /usr/lib/systemd/system/NetworkManager.service ]] && systemctl enable NetworkManager
[[ -f /usr/lib/systemd/system/speech-dispatcher.service ]] && systemctl enable speech-dispatcher
[[ -f /usr/lib/systemd/system/espeakup.service ]] && systemctl enable espeakup
systemctl enable systemd-timesyncd

# Audio and accessibility
pacman -Sy --noconfirm xorg xorg-xinit orca espeak brltty gnome-terminal pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber

if [[ "$DE" == "mate" ]]; then
  pacman -S --noconfirm mate mate-extra lightdm lightdm-gtk-greeter pamac-gtk network-manager-applet
  systemctl enable lightdm
elif [[ "$DE" == "xfce" ]]; then
  pacman -S --noconfirm xfce4 xfce4-goodies lightdm lightdm-gtk-greeter pamac-gtk network-manager-applet
  systemctl enable lightdm
elif [[ "$DE" == "gnome" ]]; then
  pacman -S --noconfirm gnome gdm pamac-gtk
  echo -e "[daemon]\nAutomaticLoginEnable=true\nAutomaticLogin=$USERNAME\nWaylandEnable=false" > /etc/gdm/custom.conf
  systemctl enable gdm
fi

# Orca autostart
mkdir -p /home/$USERNAME/.config/autostart
cat > /home/$USERNAME/.config/autostart/orca.desktop <<DESKTOP
[Desktop Entry]
Type=Application
Name=Orca
Exec=orca
X-GNOME-Autostart-enabled=true
DESKTOP
chown -R $USERNAME:$USERNAME /home/$USERNAME

# Optional tools
[[ "$ENABLE_BT" == "y" ]] && pacman -S --noconfirm bluez bluez-utils && systemctl enable bluetooth
[[ "$ENABLE_FLATPAK" == "y" ]] && pacman -S --noconfirm flatpak && flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
[[ "$INSTALL_VBOX" == "y" ]] && pacman -S --noconfirm virtualbox virtualbox-host-modules-arch && usermod -aG vboxusers $USERNAME

# Virtual machine detection
if systemd-detect-virt | grep -q vmware; then
  pacman -S --noconfirm open-vm-tools && systemctl enable vmtoolsd
elif systemd-detect-virt | grep -q oracle; then
  pacman -S --noconfirm virtualbox-guest-utils && systemctl enable vboxservice
fi

# Extra apps
pacman -S --noconfirm firefox libreoffice-fresh thunderbird wget git unzip zip p7zip htop rsync

# LightDM autologin
if [[ "$AUTOLOGIN" == "y" && "$DE" != "gnome" ]]; then
  mkdir -p /etc/lightdm/lightdm.conf.d
  echo -e "[Seat:*]\nautologin-user=$USERNAME\nautologin-session=$DE" > /etc/lightdm/lightdm.conf.d/50-autologin.conf
fi

# Bootloader
if [[ -d /sys/firmware/efi ]]; then
  grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
else
  grub-install --target=i386-pc --recheck $DISK
fi
grub-mkconfig -o /boot/grub/grub.cfg
EOF

log "✅ Installation complete! Reboot your system."